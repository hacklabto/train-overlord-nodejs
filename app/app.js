// Generated by CoffeeScript 1.4.0
var port, repl, routes, serial, serialPort, sys;

sys = require("sys");

repl = require("repl");

serialPort = require("serialport").SerialPort;

serial = new serialPort("/dev/tty.usbmodem1d11", {
  baudrate: 9600
});

serial.on("data", function(chunk) {
  return sys.puts(chunk);
});

serial.on("error", function(msg) {
  return sys.puts("SERIAL ERROR: " + msg);
});

repl.start("=>");

routes = function() {
  this.get({
    '/move/start': function() {
      var dir;
      dir = parseInt(this.params["dir"]);
      return serial.write(dir > 0 ? "F" : "B");
    }
  });
  this.get({
    '/move/stop': function() {
      return serial.write("s");
    }
  });
  this.get({
    '/claw/winch': function() {
      var val;
      val = parseInt(this.params["dir"]);
      return serial.write((val === 1 ? "p" : "P"));
    }
  });
  this.get({
    '/claw/rotate': function() {
      var val;
      val = parseInt(this.params["dir"]);
      return serial.write((val === 1 ? "w" : "W"));
    }
  });
  this.get({
    '/claw/claw': function() {
      var buffer, val;
      val = this.params["claw"];
      buffer = new Buffer("c");
      buffer.writeInt8(val === true ? 1 : 0);
      return serial.write(buffer);
    }
  });
  this.get({
    '/estop': function() {
      return serial.write("S");
    }
  });
  return this.get({
    "/": function() {
      return ["routes:", "GET /", "GET /move/start FIELDS: dir (+1 or -1)", "GET /move/stop", "GET /claw/winch FIELDS: dir (+1 or -1)", "GET /claw/rotate FIELDS: dir (+1 or -1)", "GET /claw/claw FIELDS: claw (boolean)", "GET /estop"].join("<br/>");
    }
  });
};

port = process.env.NODE_ENV === 'production' ? 80 : 8082;

require('zappajs')(port, function() {
  this.use('bodyParser');
  return routes.call(this);
});
